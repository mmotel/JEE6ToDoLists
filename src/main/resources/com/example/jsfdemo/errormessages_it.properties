# ==============================================================================
# Component Errors
# ==============================================================================
javax.faces.component.UIInput.CONVERSION={0}: Errore di conversione si c verificato.
javax.faces.component.UIInput.REQUIRED={0}: Il valore c obbligatorio.
javax.faces.component.UIInput.UPDATE={0}\: E verificato un errore durante l'elaborazione delle informazioni presentate.
javax.faces.component.UISelectOne.INVALID={0}: Errore di convalida: Il valore non e valido.
javax.faces.component.UISelectMany.INVALID={0}: Errore di convalida: Il valore non e valido.

# ==============================================================================
# Converter Errors
# ==============================================================================
javax.faces.converter.BigDecimalConverter.DECIMAL={2}: ''{0}'' deve essere un numero decimale con segno.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail={2}\: ''{0}'' deve essere un numero decimale con segno costituito da zero o più cifre, che possono essere seguiti da un punto decimale e la frazione. Esempio\: {1} 
javax.faces.converter.BigIntegerConverter.BIGINTEGER={2}: ''{0}'' deve essere un numero consistente di una o più cifre.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail={2}\: ''{0}'' deve essere un numero consistente di una o più cifre. Esempio\: {1} 
javax.faces.converter.BooleanConverter.BOOLEAN={1}: ''{0}'' deve essere 'true' o 'false'.
javax.faces.converter.BooleanConverter.BOOLEAN_detail={1}: ''{0}'' deve essere 'true' o 'false'. Qualsiasi valore diverso da 'vero' valuterà 'false'.
javax.faces.converter.ByteConverter.BYTE={2}: ''{0}'' deve essere un numero tra 0 e 255.
javax.faces.converter.ByteConverter.BYTE_detail={2}\: ''{0}'' deve essere un numero tra 0 e 255.  Esempio\: {1} 
javax.faces.converter.CharacterConverter.CHARACTER={1}: ''{0}'' deve essere un carattere valido.
javax.faces.converter.CharacterConverter.CHARACTER_detail={1}: ''{0}'' deve essere un carattere valido ASCII.
javax.faces.converter.DateTimeConverter.DATE={2}: ''{0}'' could not be understood as a date.
javax.faces.converter.DateTimeConverter.DATE_detail={2}\: ''{0}'' potrebbe non essere inteso come una data. Esempio\: {1} 
javax.faces.converter.DateTimeConverter.TIME={2}: ''{0}'' potrebbe non essere inteso come un tempo.
javax.faces.converter.DateTimeConverter.TIME_detail={2}\: ''{0}'' potrebbe non essere inteso come un tempo. Esempio\: {1} 
javax.faces.converter.DateTimeConverter.DATETIME={2}: ''{0}'' potrebbe non essere inteso come una data e ora.
javax.faces.converter.DateTimeConverter.DATETIME_detail={2}\: ''{0}'' potrebbe non essere inteso come una data e ora. Esempio\: {1} 
javax.faces.converter.DateTimeConverter.PATTERN_TYPE={1}: Un 'modello' o attributo 'tipo' deve essere specificato per convertire il valore ''{0}''.
javax.faces.converter.DoubleConverter.DOUBLE={2}: ''{0}'' deve essere un numero consistente di una o più cifre.
javax.faces.converter.DoubleConverter.DOUBLE_detail={2}\: ''{0}'' deve essere un numero tra 4.9E-324 e 1.7976931348623157E308  Esempio\: {1} 
javax.faces.converter.EnumConverter.ENUM={2}: ''{0}'' deve essere convertibile in un enum.
javax.faces.converter.EnumConverter.ENUM_detail={2}: ''{0}'' deve essere convertibile in un enum dal enum che contiene la costante ''{1}''.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS={1}: ''{0}'' deve essere convertibile in un enum dal enum, ma nessuna classe enum fornito.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail={1}: ''{0}'' deve essere convertibile in un enum dal enum, ma nessuna classe enum fornito.
javax.faces.converter.FloatConverter.FLOAT={2}: ''{0}'' deve essere un numero consistente di una o più cifre.
javax.faces.converter.FloatConverter.FLOAT_detail={2}: ''{0}'' deve essere un numero tra 1.4E-45 e 3.4028235E38  Esempio: {1}
javax.faces.converter.IntegerConverter.INTEGER={2}: ''{0}'' deve essere un numero consistente di una o più cifre.
javax.faces.converter.IntegerConverter.INTEGER_detail={2}: ''{0}'' deve essere un numero tra -2147483648 e 2147483647 Esempio: {1}
javax.faces.converter.LongConverter.LONG={2}: ''{0}'' deve essere un numero consistente di una o più cifre.
javax.faces.converter.LongConverter.LONG_detail={2}: ''{0}'' deve essere un numero tra -9223372036854775808 e 9223372036854775807 Esempio: {1}
javax.faces.converter.NumberConverter.CURRENCY={2}: ''{0}'' non può essere inteso come un valore di valuta.
javax.faces.converter.NumberConverter.CURRENCY_detail={2}: ''{0}'' non può essere inteso come un valore di valuta. Esempio: {1}
javax.faces.converter.NumberConverter.PERCENT={2}: ''{0}'' potrebbe non essere inteso come percentuale.
javax.faces.converter.NumberConverter.PERCENT_detail={2}: ''{0}'' potrebbe non essere inteso come percentuale. Esempio: {1}
javax.faces.converter.NumberConverter.NUMBER={2}: ''{0}'' non è un numero.
javax.faces.converter.NumberConverter.NUMBER_detail={2}: ''{0}'' non è un numero. Esempio: {1}
javax.faces.converter.NumberConverter.PATTERN={2}: ''{0}'' non è un modello di numero.
javax.faces.converter.NumberConverter.PATTERN_detail={2}: ''{0}'' non è un modello di numero. Esempio: {1}
javax.faces.converter.ShortConverter.SHORT={2}: ''{0}'' deve essere un numero consistente di una o più cifre.
javax.faces.converter.ShortConverter.SHORT_detail={2}: ''{0}'' deve essere un numero tra -32768 e 32767. Esempio: {1}
javax.faces.converter.STRING={1}: Impossibile convertire ''{0}'' in stringa.


# ==============================================================================
# Validator Errors
# ==============================================================================
javax.faces.validator.DoubleRangeValidator.MAXIMUM={1}: Errore di convalida: Valore è maggiore del massimo consentito "{0}"
javax.faces.validator.DoubleRangeValidator.MINIMUM={1}\:  Errore di convalida: Il valore è inferiore al minimo consentito di ''{0}''
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE={2}\: Errore di convalida: Valore non è compreso nell'intervallo tra {0} e {1}.
javax.faces.validator.DoubleRangeValidator.TYPE={0}: Errore di convalida: Il valore non è del tipo corretto.
javax.faces.validator.LengthValidator.MAXIMUM={1}: Errore di convalida: Length è maggiore del massimo consentito ''{0}''
javax.faces.validator.LengthValidator.MINIMUM={1}: Errore di convalida: La lunghezza è inferiore al minimo consentito di ''{0}''
javax.faces.validator.LengthValidator.NOT_IN_RANGE={2}\: Errore di convalida: Length is out of range between {0} e {1}.
javax.faces.validator.LongRangeValidator.MAXIMUM={1}: Errore di convalida: Valore è maggiore del massimo consentito ''{0}''
javax.faces.validator.LongRangeValidator.MINIMUM={1}: Errore di convalida: Il valore è inferiore al minimo consentito di ''{0}''
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE={2}\: Errore di convalida: Valore non è compreso nell'intervallo tra {0} e {1}.
javax.faces.validator.LongRangeValidator.TYPE={0}: Errore di convalida: Il valore non è del tipo corretto.
javax.faces.validator.NOT_IN_RANGE=Errore di convalida: Attributo specificato non è tra i valori attesi di {0} e {1}.
javax.faces.validator.RegexValidator.PATTERN_NOT_SET=Regex modello deve essere impostato.
javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail=Regex modello deve essere impostato su valore non vuoto.
javax.faces.validator.RegexValidator.NOT_MATCHED=Regex non corrispondente.
javax.faces.validator.RegexValidator.NOT_MATCHED_detail=Regex modello di'' {0}'' non corrisponde
javax.faces.validator.RegexValidator.MATCH_EXCEPTION=Errore nell'espressione regolare.
javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail=Errore nell'espressione regolare., ''{0}''
javax.faces.validator.BeanValidator.MESSAGE={0}